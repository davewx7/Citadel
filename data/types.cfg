{
	"@derive": "@include lib_2d:data/types.cfg",
	Loc: "[int,int]",
	SchoolInfo: "{
		name: string,
		resource: string,
		red: decimal,
		green: decimal,
		blue: decimal,
		icon: string,
		color: [decimal,decimal,decimal],
		color_html: string,
		secondary_color: [decimal,decimal,decimal],
		accent_color1: [decimal,decimal,decimal],
		accent_color2: [decimal,decimal,decimal],
	}",

	Deck: "{
		cards: [string],
		name: string,
		schools: null|[int],
		notes: null|string,
		avatar: null|string,
		creation_time: null|int,
		mod_time: null|int,
		archived: bool|null,
		custom_sort: null | int,
	}",
	DeckMap: "{string -> Deck}",

	Point: "Point2d|Point3d",
	Point2d: "[Numeric, Numeric]",
	Point3d: "[Numeric, Numeric, Numeric]",

	LobbyGame: "{game_type: string, game_id: int, max_players: int, users: [string]}",

	CardAnim: "{start_focus: [decimal,decimal], end_focus: [decimal,decimal], start_zoom: decimal, end_zoom: decimal, cycles: int}",

	CardInstance: "{
		id: string,
		name: string
	}",

	Quest: "{
		assigned_date: int,
		type: string,
		current_value: int,
	}",

	//if you modify this, also modify classes/citadel.cfg's construct_account
	//to make sure the account can be properly constructed from a map.
	//also modify classes/matchmaking_server.cfg's create_account()
	"extends:AccountDetails": "{
		//version 1: 9/20/17
		version: int|null,

		email: string|null,
		collection: [CardInstance],
		games_played: int,
		games_won: int,
		first_match: int|null,
		level: decimal,
		avatar: string,

		recent_games: null|[string],

		unlocks: [string],
		campaign_scenario: int|null,

		campaign_location: string|null,
		campaign_progress: {string -> int},

		campaign_flags: [string],

		decks: {string -> Deck},

		quests: [Quest],
		complete_quests: [Quest],

		puzzles_completed: [string],

		gold: int,

		packs: { string -> int },
	}",

	CampaignRecordEntry: "{victory: int, plays: int}",

	CampaignRecord: "{ string -> CampaignRecordEntry }",

	Tip: "{
		key: string,
		text: string,
		title: null|string,
		max_shows: int|null,
		has_never_show_again: bool|null,
		has_protect_me: bool|null,
		targets: [custom_obj|null]|null,
		target_offset_x: int|null,
		target_offset_y: int|null,
		is_modal: bool|null,
		clear_key: null|string,
		delay: null|int,
	}",

	MapLane: "{begin: int, length: int}",

	Scenario: "{
		name: string,
		node_id: string|null,
		set: string|null,
		loc: [int,int]|null,
		enemy_name: string,
		text: string,
		scenario_type: string|null,
		bot_type: string|null,
		bot_args: null|map,
		bot: string|null,
		portrait: null|string,
		portrait_scale: null|decimal,
		portrait_translate: null|[decimal, decimal],
		avatar: string,
		unlock: string|null,
		tutorial: string|null,
		starting_units: null|[map],
		map_dimensions: null|[int,int],
		map_lanes: null|[MapLane],
		trophies: null|[[int]],
		player_resources: null|int,
		inhibit_deck_choice: null|bool,
		theme: string|null,
		music_theme: string|null,
		storyline: string|null,
		reward_gold: int|null,
		setup_commands: null|string,

		skip_mulligan: null|bool,

		//forces the player to have a specified deck,
		//usually used for puzzles
		player_deck: null|[string],
		play_second: null|bool,

		no_shuffle: null|bool,

		client_tutorial_args: null|map,
	}",

	Campaign: "{
		name: string,
		lock_world_map: bool|null,
		scenarios: [Scenario],
	}",

	CampaignMapLocation: "{
		x: decimal,
		y: decimal,
		name: string,
		file: string,
		description: string,
		prerequisites: [string],
	}",

	CampaignMap: "{
		map_name: string,
		areas: [CampaignMapLocation],
	}",

	PossiblePlay: "{
		card: class card|null,
		ability: class card_base|null,
		creature: class creature|null,
		targets: [Loc],
	}",

	Artist: "{
		name: string,
	}",

	Animation: "{x: int, y: int, w: int, h: int, scale: int, frames: int, id: string, image: string, fbo: texture_object, no_remove_alpha_borders: bool}",

	CardSet: "{
		id: string,
		name: string,
	}",

	PlayerHeartbeat: "{ingame: bool, lag: int, nick: string}",
}

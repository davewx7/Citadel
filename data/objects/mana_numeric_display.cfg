{
id: "mana_numeric_display",
is_strict: true,
always_active: true,

properties: {
	_width: { type: "int" },
	_height: { type: "int" },

	max_mana: {
		type: "int",
		default: 3,
		set: "if(value != _data, [
			set(_data, value),
			set(_dirty, true),
		])",
	},
	current_mana: {
		type: "int",
		set: "if(value != _data, [
			set(_data, value),
			set(_dirty, true),
		])",
	},

	update_mana: "def(int new_cur_mana, int new_max_mana) ->commands
	[
	set(max_mana, new_max_mana),
	if(new_cur_mana != current_mana,
		animate(me, {
			current_mana: new_cur_mana,
		}, {
			duration: 30,
		})
	)
	]
	",

	_dirty: { default: false },

	_font: { type: "string", init: "lib.font.regular_font" },
	_font_size: "int :: lib.citadel.py(22)",

	_controller: { type: "obj citadel_controller" },
	_is_player: { type: "bool" },
	player_num: { type: "int" },

	render: "def(int ww, int hh) ->commands [
		log('RENDER MANA'),
		set(_dirty, false),
		set(animation,
			lib.citadel.render_frame(c, ww, hh, [
				c.save(),
				c.scale(decimal(ww)/decimal(frame_dim[0])),
				c.paint_image(frame_image),
				c.restore(),

				c.save(),
				c.translate(ww*(1.0-icon_size)*0.5, hh*(1.0-icon_size)*0.5),
				c.scale((ww*icon_size)/decimal(icon_dim[0])),
				c.paint_image(icon_image),
				c.restore(),

				c.save(),
				c.translate(ww / 2 - num_area.width / 2,
				            int(hh * .62)),
				c.set_font(_font),
				c.set_font_size(_font_size),
				c.text_path(mana_str),
				c.set_source_rgba(1, 1, 1, 1),
				c.fill(),
				c.restore(),
			])
			where icon_size = 0.65
			where icon_dim = c.image_dim(icon_image)
			where icon_image = 'images/avatar/mana-icon.png'
			where frame_dim = c.image_dim(frame_image)
			where frame_image = sprintf('images/avatar/mana-frame-%s.png', if(_is_player, 'gold', 'silver'))
		)
		  where num_area = c.text_extents(_font, _font_size, mana_str)
		  where mana_str = str(current_mana) + '/' + str(max_mana)
		  where c = canvas()
	]",
},

on_create: "render(_width, _height)",

on_process: "if(_dirty, render(_width, _height))",


}

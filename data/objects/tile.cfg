{
	is_strict: true,
	"animation": [
		{
			"id": "main",
			"image": "tiles2.png",
			"rect": [1,1,47,29],
			frames: 30,
			frames_per_row: 5,
			duration: 1,
		},
		{
			"id": "forest",
			"image": "tiles2.png",
			"rect": [49,99,94,144],
		},
		{
			"id": "mountain",
			"image": "tiles2.png",
			"rect": [97,99,142,144],
		}
	],
	"id": "tile",
	mouseover_area: [-45,-27,45,27],

	properties: {
		_child_label: { type: "null|obj tile.level_label" },
		_controller: { type: "obj citadel_controller" },

		_base_y: { type: "int", default: -1 },
		loc: { type: "Loc", default: [0,0] },

		_mouseover: { type: "bool", default: false },

		do_highlight: { type: "int", default: 0 },

		selectable: { type: "bool", default: false },

		destroy_children: "def() ->commands if(_child_label, remove_object(_child_label))",
		destroy: "def() ->commands [destroy_children(), remove_object(me)]",

		game_state: {
		  type: "class game|null",
		  set: "[
		    set(_data, value),
		    fire_event('update_tile')
		  ]"
		}
	},

	on_spawned: "[set(me._controller, obj citadel_controller<- spawner), set(time_in_animation_delta, 0)] where spawner = custom_obj<- arg.spawner",
	on_enter_anim: "set(y, _base_y - (img_h - 20)/2 )",
	on_update_tile: "
	[set(zorder, loc[0]),
	 if(_base_y = -1, set(_base_y, y)),
	if(game_state.villages[loc] != null,
	  [
	  destroy_children(),
	  spawn('tile.level_label', mid_x - 14, mid_y - 8, 1, [set(_child_label, child), set(child.time_in_animation, game_state.villages[loc].level + (game_state.villages[loc].owner + 1)*3)]),

	  set(time_in_animation, 25),
	  if(game_state.villages[loc].owner != -1,
	     [set(time_in_animation_delta, 0)])]
		  )] asserting game_state",

	on_click: "[_controller.tile_clicked(me)]",
	
	on_mouse_enter: "[set(_mouseover, true), _controller.mouse_enter_tile(me)]",
	on_mouse_leave: "[set(_mouseover, false), _controller.mouse_leave_tile(me)]",

	on_process: "if(_mouseover, set(brightness, 500),
	                if(selectable, set(brightness, 255 + wave(cycle*12)/10),
							       set(brightness, 255)))",
	
	object_type: [
		{
			id: "level_label",
			properties: {
				destroy: "def() ->commands remove_object(me)",
			},
			animation: [
				{
					id: "normal",
					image: "citadel-buildings.png",
					rect: [127,266,136,275],
					duration: 1,
					frames_per_row: 3,
					frames: 9,
					pad: 0,
				}
			],

			zorder: 500,
			on_spawned: "[set(time_in_animation_delta, 0)]",
		}
	],
	
	shader: {
		program: "tile_shader",
		draw: "if(parent, set(uniforms.do_highlight, parent.do_highlight))",
		create: "[set(uniforms.u_tex_map, 0), set(uniforms.do_highlight,0)]",
	},
}

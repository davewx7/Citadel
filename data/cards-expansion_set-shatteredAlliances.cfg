{
//@Author: Valis
//TO DO: replace artists and graphics with something fitting

/*
Materia: 
1. [Creature] Junk wagon: "Valiant. When dies, if there are no land on the hex summon a baricade.", Cost 3 + 1 Loayality, Stats 4/1
2. [Land] Baricade: "[Building] Fragile. Creatures on this land have +0/+2. Ranged units get an additional +1/+0" Cost: 3 + 2 Loyality
3. [Land] Trench: "[Building] Creatures on this land have +2 armour and cover.  Ranged units get an additional +1/+0" Cost 3 + 3 loyality
4. [Creature] Scirmisher: ['Mounted'] "Can be summoned only on the far left or right lane. Swift. Manover",  Cost 4 + 1 Loyality, Stats 5/4, 
5. [Spell] Tremors: "Destroy all buildings.", Cost: 2 + 3 Loyality

Entropia:
1. [Creature] Angry Mob: "Agitated - Gets +1/+1 on every move. Can only be summoned on middle lane.", Cost 4, Stats 4/3
2. [Creature] I am Legion: [Golem, Construct] "Horrific Meld" -> "Has X attack /Y life - on summoned X and Y is set to the total attack and total life of all your other creatures. Obliterate every other creature you control.", Cost 3 + 3 Loyality, (initial) Stats: 0/0,
3. [Spell] Hecatomb: "Destroy all creatures. Lose 10 life.", Cost: 4 + 4 Loyality

Ether:
1. [Spel] Quantum in oculis deorum: "All creatures life is equilized - rounded down. Same with attack but rounded up." Cost 3 + 3 Loyality

Gaea:
1. [Spell] Natural Cataclysm: "Destroy all lands.", Cost: 3 + 4 Loyality

Minerva:
1. [Creature] Charged Spire: "[Building] Static Charge - Deals 1 damage to your opponent at the start of your turn.; Mana Tap - Your mana pool is decreased by 2.", Cost: 2 + 2 Loyality, Stats: 0/3
*/

//Materia cards

	"Trench": {
		name: "Trench",
		set: "shatteredAlliances",
		rarity: 0,
		type: "creature",
		artist: "lucy",
		cost: 3,
		loyalty_cost: 3,
		portrait: "wall-of-stone.png",
		portrait_focus: [429,236],
		portrait_focus_height: 110,
		school: "@eval GOLD",
		creature: {
			tags: ["Building"],
			sound_impact: "wood",
			is_land: true,
			rules: "Creatures on this land have +2 armour and cover. If the creature is ranger it gets aditional +1 attack.",
			static_ability_effect: "if(creature.loc = target.loc and not target.is_land, if('Ranged' in target.abilities, [target.apply_static_effect('armor', 2), target.apply_static_effect('attack', 1), target.add_ability_static_duration('Cover') ], [target.apply_static_effect('armor', 2), target.add_ability_static_duration('Cover')]))",
			
		},
	},

	"Baricade": {
		name: "Baricade",
		set: "shatteredAlliances",
		rarity: 0,
		type: "creature",
		artist: "lucy",
		cost: 2,
		loyalty_cost: 3,
		portrait: "wall-of-stone.png",
		portrait_focus: [429,236],
		portrait_focus_height: 110,
		school: "@eval GOLD",
		creature: {
			tags: ["Wall"],
			sound_impact: "wood",
			is_land: true,
			abilities: ["Fragile"],
			rules: "Your creatures on this land have +1 attack and +2 life. If the creature is ranger it gets aditional +1 attack.",
			static_ability_effect: "if(creature.loc = target.loc and not target.is_land, if('Ranged' in target.abilities, [target.apply_static_effect('life_shield', 2), target.apply_static_effect('attack', 2)], [target.apply_static_effect('life_shield', 2), target.apply_static_effect('attack', 1)]))",
			
		},
	},
	
	"Skirmishers": {
		name: "Skirmishers",
		set: "shatteredAlliances",
		rarity: 1,
		type: "creature",
		portrait: "kings-rider.png",
		portrait_focus: [451,198],
		portrait_focus_height: 120,
		artist: "wendyyoon",
		cost: 4,
		loyalty_cost: 1,
		school: "@eval GOLD",
		possible_targets: "def(class game_state game, class creature avatar, [Loc] targets) ->[Loc]|null
		   if(creature != null and targets = [],
					filter(game.players[avatar.controller].summoning_locs(game, creature),
                    in_side where in_side = (value.x = 0 or value.x+1 = game.map_dimensions.x)
                    )
                  )",
		creature: {
			abilities: ['Swift'],
			tags: ['Mounted'],
			attack: 5,
			life: 4,
			game_sounds: "soldier_blade",
			sound_swish: "medium",
			sound_impact: "wood",
			
			activated_abilities: [
				{
					name: 'Maneuver',
					cost: 1,
					portrait: "kings-rider.png",
					school: "@eval GOLD",
					rules: "Spend 1 movement to move to an adjacent tile.",
					once_per_turn: false,
					uses_movement: true,

					possible_targets: "
					 def(class game_state game, class creature creature, [Loc] targets) ->[Loc]|null
						if(targets = [], filter(
								game.get_adjacent_locs(creature.loc),
							game.is_loc_on_board(value) and
							game.creature_at_loc(value) = null), null)
					",

					on_play: "def(class game_state game, class message.play_card info) ->commands [
						creature.set_loc(game, info.targets[0]),
                        add(creature.spaces_moved_this_turn, 1)
					] asserting size(info.targets) = 1
					  where creature = info.get_creature(game)",
				}
			]

		}
	},
	
	"Junk wagon": {
		name: "Junk wagon",
		type: "creature",
        set: "shatteredAlliances",
		portrait: "wall-of-stone.png",
		portrait_focus: [429,236],
		portrait_focus_height: 110,
		cost: 3,
		loyalty_cost: 1,
        rarity: 0,
		school: "@eval MATERIA",
		creature: {
			tags: ['Mechanical'],
			abilities: ['Valiant'],
			attack: 4,
			life: 1,
			triggered_abilities: [{
				name: "Baricade ",
				rules: "When Junk Wagon dies, an (Materia) Baricade Land is summoned in the lane it was in unleas there is another land on it already.",
				on_die: "def(class creature creature, class game_state game) ->commands
				if(not game.land_at_loc(creature.loc),
				game.summon_land(lib.citadel.create_creature('Baricade', { controller: creature.controller, loc: creature.loc, card_name: 'Baricade' }))
				)",
			}],
		},
	},
	
	"Tremors": {
		name: "Tremors",
		type: "spell",
		set: "shatteredAlliances",
		cost: 2,
		loyalty_cost: 3,
		school: "@eval GOLD",
		rarity: 2,
		rules: "Destroy all buildings.",
		on_play: "def(class game_state game, class message.play_card info) ->commands
		  map(
			filter(game.creatures, value.is_building), 
			creature, [
				add(game.graveyard, {(creature.summon_id): creature}),
				set(creature.destroyed, true)
			])",
	},

//Entropy cards
	
	"Mindless Mob": {
		name: "Mindless Mob",
		set: "shatteredAlliances",
		rarity: 0,
		type: "creature",
		portrait: "kings-rider.png",
		portrait_focus: [451,198],
		portrait_focus_height: 120,
		artist: "wendyyoon",
		cost: 4,
		school: "@eval BLOOD",
		possible_targets: "def(class game_state game, class creature avatar, [Loc] targets) ->[Loc]|null
		   if(creature != null and targets = [],
					filter(game.players[avatar.controller].summoning_locs(game, creature),
                    in_center where in_center = (game.map_dimensions.x%2 = 1 and value.x*2+1 = game.map_dimensions.x)
                    )
                  )",
		rules: "Can only be summoned in the middle lane.",
		creature: {
			tags: ['Mob'],
			attack: 4,
			life: 3,
			triggered_abilities: [{
			name: "Agitated",
			rules: "Gets +1/+1 on every move.",
			on_move: "def(class creature avatar, class game_state game) ->commands [
			add(avatar.life, 1), add(avatar.attack, 1)]"
			}],
		
		}
	},
	
	"I am Legion": {
		name: "I am Legion",
		rarity: 2,
		set: "shatteredAlliances",
		type: "creature",
		school: "@eval BLOOD",
		flavor_text: '"<i>My name is Legion</i>", it replied, "<i>...for we are many.</i>"',   
		portrait: "flesh-golem.png",
		portrait_focus: [340,222],
		portrait_focus_height: 200,
		artist: "wendyyoon",
		cost: 3,
		loyalty_cost: 3,
		
		creature: {
			game_sounds: "ghostly_creature",
			sound_summoned: "creatures/summon-flesh-golem.wav",
			sound_death: "creatures/death-flesh-golem.wav",
			tags: ['Construct', 'Golem'],
			attack: 0,
			life: 0,
			triggered_abilities: [{
				name: "Horrific Meld",
				rules: "Has <font tag='attack'>X</font>attack/<font tag='life'>Y</font>life - on summoned <font tag='attack'>X</font> and <font tag='life'>Y</font> is set to the total attack and total life of all your other creatures. Obliterate every other creature you control.",
				on_summoned: "def(class creature creature, class game_state game) ->commands
				[
					[
						[
						set(c.destroyed, true),			
						set(c.obliterated, true)
						] | c <- filter(game.creatures, not value.is_building and (value.controller = creature.controller)), c != creature
					],
					[
						[
						set(creature.life, summ_life)  where summ_life = sum(map(my_creatures,value.life)),			
						set(creature.attack, summ_attack) where summ_attack = sum(map(my_creatures,value.attack))
						] where my_creatures = filter(game.creatures, not value.is_building and (value.controller = creature.controller))
					]	
				]",
			}],
		}
	},
	
	"Hecatomb": {
		name: "Hecatomb",
		type: "spell",
		set: "shatteredAlliances",
		cost: 6,
		portrait: "doomsday-crypt.png",
		hue_shift: 0.5,
		loyalty_cost: 4,
		school: "@eval BLOOD",
		rarity: 2,
		rules: "Destroy all creatures. Lose 12 life.",
		on_play: "def(class game_state game, class message.play_card info) ->commands
		  [map(
			filter(game.creatures, value.is_regular_creature), 
			[
				add(game.graveyard, {(value.summon_id): value}),
				set(value.destroyed, true)
			]),
			//add(game.players[info.player_index].life, -12)
			game.players[info.player_index].inflict_damage_cannot_kill(10)
		  ]",
	},
	
	
//Aether cards
	
	"Quantum in oculis deorum": {
		name: "Quantum in oculis deorum",
		rarity: 2,
		set: "shatteredAlliances",
		type: "spell",
		school: "@eval AETHER",
		flavor_text: "All are equal in the eyes of gods",
		portrait: "sul-dahl-devout.png",
		cost: 3,
		loyalty_cost: 3,
		rules: "All creatures life is equilized - rounded down. Same with attack but rounded up.",
		
		on_play: "def(class game_state game, class message.play_card info) ->commands [
			map(creature_list[0:], set(value.life, new_life) where new_life =  sum(map(creature_list,value.life))/size(creature_list))
			where creature_list = filter(
				game.creatures,
				value.is_regular_creature),
			map(creature_list[0:], set(value.attack, new_attack) 
				where new_attack = if(absolute_summ % creature_count = 0, 
					(absolute_summ / creature_count),
					(absolute_summ + (absolute_summ % creature_count)) / creature_count)
						where absolute_summ = sum(map(creature_list,value.attack)) where creature_count = size(creature_list) )
			where creature_list = filter(
				game.creatures,
				value.is_regular_creature)
			]",
	},
	
	
	
//Gaea

	"Natural Cataclysm": {
		name: "Natural Cataclysm",
		type: "spell",
		set: "shatteredAlliances",
		cost: 3,
		loyalty_cost: 4,
		school: "@eval FOOD",
		rarity: 2,
		rules: "Destroy all lands.",
		on_play: "def(class game_state game, class message.play_card info) ->commands
		  map(game.lands, set(value.destroyed, true))",
	},


//Minerva

	"Charged Spire": {
		name: "Charged Spire",
		set: "shatteredAlliances",
		rarity: 0,
		type: "creature",
		artist: "lucy",
		cost: 2,
		loyalty_cost: 2,
		portrait: "wall-of-stone.png", //new picture needed
		portrait_focus: [429,236],
		portrait_focus_height: 110,
		school: "@eval GOLD",
		creature: {
			tags: ["Building"],
			life: 3,
			attack: 0,
			//abilities: ['Ranged'],
			//armor: 1,
			portrait_y_offset: 30,
			sprite_sheet: 'building',
			is_building: true,
			sound_impact: "wood",
			
			
			triggered_abilities: [{
				name: "Static Charge",
				icon: "triggered-bad.png",
				rules: "Deals 1 damage to your opponent at the start of your turn.",
				//ai_value: 0.8,     //dont know what that means, please adjust accordingly, taken from Skeletal Parasite

				on_begin_turn: "def(class creature creature, class game_state game) ->commands
					//deal 1 damage to opponent at start of turn.
					if(game.current_player_turn_index = creature.controller, [
						game.players[(creature.controller+1)%2].inflict_damage_cannot_kill(1),
						add(game.animation_hints, [construct('animation.player_damage_hint', { type: 'player_damage_hint', target_player: (creature.controller+1)%2, source: creature, amount: 1, intensity: 1, anim_type: 'bloodcord' })]),  //TO DO: change animation to lightning effect, anyone?
					])
				",
				}],
				
			//for some reason this below doesnt work as intended, code copied from 'Mine'			
			passive_abilities: [{
				name: "Mana Tap",
				icon: 'plus-mana.png', //TO DO: Make the mana icon red to indicate a negative effect
				rules: "Your mana pool is decreased by 2.",

				static_effect: "def(class game_state game, class creature creature) ->commands
				if(creature.controller >= 0,
				   game.players[creature.controller].apply_static_effect(
					(def(class player p, map info) ->commands add(p.base_income, -2)),
					(def(class player p, map info) ->commands add(p.base_income, 2)),
					{}))
					",
			}],
			
		}
	},
	
}

{
  bases: ["bot"],
  properties: {
    //cards_to_consider: "def(game, player)
    //  if(found != null, found, player.hand)
    //  where found = find(player.hand,
    //    value.name = q(Nature's Blessing) and player.calculate_cost(value) <= 1 or
    //    value.name = 'Endless Studies' and player.calculate_cost(value) = 0
    //  )
    //",

    score_summons: "def(class game game, map play_info, class card card, Loc loc)
      // Capture glyphs with acolytes
      if(card.name = 'Acolyte', if(lane_has_neutral_glyphs(game, lane), 200, 100), 0) +

      // Put the hasty creatures in empty lanes
      if(card.name = 'Goblin Marauder' or card.name = 'Wolf Rider' or card.name = 'Goblin King', if(enemy_creatures_in_lane = null, 100, 0), 0) +

      // Bonus for free Marauders
      if(card.name = 'Goblin Marauder', if(game.players[game.nplayer].calculate_cost(card) = 0, 50, 0), 0) +

      // Prefer to put a Wolf Rider in an empty lane first, then see if there are other plays
      if(card.name = 'Wolf Rider', if(enemy_creatures_in_lane = null, 50, 0), 0) +

      // It's better to place Goblin Kings on middle lanes
      if(card.name = 'Goblin King', if(loc[0] <= 0 or loc[0] >= 5, -100, 0), 0) +

      // Don't neutralize your own glyphs
      if(card.name = 'Goblin Marauder' or card.name = 'Wolf Rider', if(lane_has_my_glyphs(game, lane), -100, 100), 0) +

      // Emergency block with Acolytes, Marauders, and Sappers
      if(card.name = 'Acolyte' or card.name = 'Goblin Marauder' or card.name = 'Goblin Sapper', if(
        enemy_creatures_near_endzone != null and
        friendly_blocker_in_lane = null,
      400, 0), 0) +

      // Sappers love lanes with towers, but other creatures should fear those lanes
      if(lane_has_neutral_towers(game, lane), if(card.name = 'Goblin Sapper', 400, -1000), 200)

      where friendly_blocker_in_lane = if(enemy_creatures_near_endzone, find(game.creatures, // unblocked enemy creatures in lane close to the end zone
        value.controller = game.nplayer and
        value.loc[0] = lane and
        value.tiles_from_start <= 8 - enemy_creatures_near_endzone.tiles_from_start
      ))
      where enemy_creatures_near_endzone = find(enemy_creatures_in_lane, // enemy creatures in lane and close to the end zone
        value.tiles_from_start + value.move >= 6
      )
      where enemy_creatures_in_lane = filter(game.creatures, // enemy creatures in lane
        value.controller != game.nplayer and
        value.loc[0] = lane
      )
      where lane = loc[0]
    ",

    score_spell: "def(class game game, map play_info, class card card, [Loc] targets) ->int
      // ALWAYS play free Nature's Blessings
      if(card.name = q(Nature's Blessing), if(game.players[game.nplayer].calculate_cost(card) <= 1, 500, 50), 0) +

      // ALWAYS play free Endless Studies
      if(card.name = 'Endless Studies', if(game.players[game.nplayer].calculate_cost(card) = 0, 500, 50), 0) +

      // Fireballing enemies that are close to the end zone is a high priority
      if(card.name = 'Fireball', if(
        target_creature.controller != game.nplayer and // only use on enemies
        target_creature.move + target_creature.tiles_from_start >= 8, // target enemies that are close to the end zone
      1000, 0), 0) +

      // You can still fireball far away enemies if you have nothing else to do
      if(card.name = 'Fireball', if(
        target_creature.controller != game.nplayer, // only use on enemies
      20, 0), 0) +

      // If you have nothing else to do, upgrade your Acolytes and Marauders; TODO: upgrade as a response to removal
      if(card.name = 'Polymorph',if(
        (not game.in_response_phase) and // don't respond with this just because it's the only response card
        target_creature.controller = game.nplayer and // only upgrade your creatures
        (target_creature.name = 'Goblin Marauder' or target_creature.name = 'Acolyte'), // only upgrade Acolytes and Marauders
      100, 0), 0) +

      // Use a surprise Quick Step to push one of your ublocked creatures into the end zone or right before end zone where the enemy can't summon a blocker
      if(card.name = 'Quick Step', if(
        (not game.done_movement) and // don't use if the move phase is over
        target_creature.controller = game.nplayer and // only use on your creatures
        target_creature.move + target_creature.tiles_from_start >= 7 and // don't use if the creature isn't close enough
        target_creature.move + target_creature.tiles_from_start < 9 and // don't use if the creature can already make it
        (not find(game.creatures, // don't use if that lane is blocked
          value.controller != game.nplayer and
          value.loc[0] = targets[0][0] and
          value.tiles_from_start < 8 - target_creature.tiles_from_start)
      ), 400, 0), 0)

      where target_creature = game.creature_at_loc_or_die(targets[0])
    ",

    deck: "
      ['Acolyte']*3+
      ['Goblin Marauder']*3+
      ['Goblin King']*3+
      ['Goblin Sapper']*3+
      ['Wolf Rider']*3+
      [q(Nature's Blessing)]*3+
      ['Endless Studies']*3+
      ['Fireball']*3+
      ['Polymorph']*3+
      ['Quick Step']*3
    ",
  },
}

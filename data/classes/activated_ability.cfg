{
	bases: ['card_base'],
	properties: {
		unique_id: { variable: true, type: 'int|null' },


		exhausts_creature: { variable: true, default: false },

		rules: { variable: true, default: 'RULE ABILITY TEXT NEEDED' },

		is_response: { variable: true, default: false },

		is_usable: "def(class game game, class creature creature) ->bool true",


		possible_targets: "def(class game game, class creature creature, [[int]] targets) ->[[int]]|null null",

		targets_valid: "def(class game game, class creature creature, [[int]] targets, [[int]] existing=[]) ->bool
		  if(possible = null, targets = [], if(possible = [], false,
		   (targets[0] in possible) and
		   targets_valid(game, creature, targets[1:], existing + [targets[0]])))
			where possible = possible_targets(game, creature, existing)
		",

		on_play: "def(class game game, class creature creature, class message.play_ability info) ->commands null",

		card_font: "'RobotoCondensed-Light'",

		rules_text_widgets: "def(int scale) -> [map]
			[{
				type: 'label',
				color: 'black',
				size: 10*scale,
				font: card_font,
				text: rules,
			}]
		",

		runes: { default: [], type: "[map]" }
	}
}
